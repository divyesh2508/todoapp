name: Deploy to AWS ECR and Kubernetes

on:
  push:
    branches:
      - main 
      

permissions:
  contents: read  # For checking out the repository
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to ECR
      env:
        ECR_REGISTRY: 910253526187.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: web-app
        IMAGE_TAG: dev
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker rmi $ECR_REPOSITORY:$IMAGE_TAG
        docker rmi $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Install kops and kubectl
      run: |
          curl -Lo kops https://github.com/kubernetes/kops/releases/download/v1.28.0/kops-linux-amd64
          chmod +x kops
          sudo mv kops /usr/local/bin/
          
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

    - name: Export kubeconfig using Kops
      run: |
         mkdir -p ~/.kube
         kops export kubecfg --admin=87600h0m0s --state=s3://gymfans-kops-cluster-stage --name=k8s.gymfans.com

    - name: Restart Kubernetes Deployment
      run: |
        kubectl rollout restart deployment gymfans-admin-deployment -n development